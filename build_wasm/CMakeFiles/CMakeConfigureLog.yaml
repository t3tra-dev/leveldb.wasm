
---
events:
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineSystem.cmake:200 (message)"
      - "CMakeLists.txt:7 (project)"
    message: |
      The target system is: Emscripten - 1 - x86
      The host system is: Darwin - 24.1.0 - arm64
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "CMakeLists.txt:64 (check_include_file)"
    checks:
      - "Looking for unistd.h"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-XaXCCx"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-XaXCCx"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_UNISTD_H"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-XaXCCx'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_0e693/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_0e693.dir/build.make CMakeFiles/cmTC_0e693.dir/build
        Building C object CMakeFiles/cmTC_0e693.dir/CheckIncludeFile.c.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc   -std=c11 -MD -MT CMakeFiles/cmTC_0e693.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_0e693.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_0e693.dir/CheckIncludeFile.c.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-XaXCCx/CheckIncludeFile.c
        Linking C executable cmTC_0e693.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0e693.dir/link.txt --verbose=1
        cache:INFO: generating system asset: symbol_lists/f9add8b6915421909c653bc81b5284356b291743.json... (this will be cached in "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cache/symbol_lists/f9add8b6915421909c653bc81b5284356b291743.json" for subsequent builds)
        cache:INFO:  - ok
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc   -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_0e693.dir/objects1.rsp -o cmTC_0e693.js
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:78 (try_compile)"
      - "CMakeLists.txt:67 (check_library_exists)"
    checks:
      - "Looking for crc32c_value in crc32c"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-o7qKXm"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-o7qKXm"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_CRC32C"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-o7qKXm'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_ca255/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_ca255.dir/build.make CMakeFiles/cmTC_ca255.dir/build
        Building C object CMakeFiles/cmTC_ca255.dir/CheckFunctionExists.c.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc   -DCHECK_FUNCTION_EXISTS=crc32c_value -std=c11 -MD -MT CMakeFiles/cmTC_ca255.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_ca255.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_ca255.dir/CheckFunctionExists.c.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-o7qKXm/CheckFunctionExists.c
        Linking C executable cmTC_ca255.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ca255.dir/link.txt --verbose=1
        wasm-ld: error: unable to find library -lcrc32c
        emcc: error: '/opt/homebrew/Cellar/emscripten/4.0.0/libexec/llvm/bin/wasm-ld -o cmTC_ca255.wasm CMakeFiles/cmTC_ca255.dir/CheckFunctionExists.c.o -lcrc32c -L/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cache/sysroot/lib/wasm32-emscripten -lGL-getprocaddr -lal -lhtml5 -lstubs-debug -lnoexit -lc-debug -ldlmalloc-debug -lcompiler_rt -lc++-noexcept -lc++abi-debug-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr /var/folders/td/d2t00v0s3t53qvl_jtlkjb7r0000gn/T/tmp6uiru9_jlibemscripten_js_symbols.so --strip-debug --export=malloc --export=free --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_get_current --export=emscripten_stack_init --export=_emscripten_stack_alloc --export=__wasm_call_ctors --export=_emscripten_stack_restore --export=strerror --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_lib_deps --export-if-defined=__stop_em_lib_deps --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=main --export-if-defined=__main_argc_argv --export-if-defined=fflush --export-table -z stack-size=65536 --max-memory=2147483648 --initial-memory=16777216 --no-entry --stack-first --table-base=1' failed (returned 1)
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc  -DCHECK_FUNCTION_EXISTS=crc32c_value   -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_ca255.dir/objects1.rsp -o cmTC_ca255.js @CMakeFiles/cmTC_ca255.dir/linkLibs.rsp
        make[1]: *** [cmTC_ca255.js] Error 1
        make: *** [cmTC_ca255/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:78 (try_compile)"
      - "CMakeLists.txt:68 (check_library_exists)"
    checks:
      - "Looking for snappy_compress in snappy"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-DvMNld"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-DvMNld"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_SNAPPY"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-DvMNld'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_466fc/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_466fc.dir/build.make CMakeFiles/cmTC_466fc.dir/build
        Building C object CMakeFiles/cmTC_466fc.dir/CheckFunctionExists.c.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc   -DCHECK_FUNCTION_EXISTS=snappy_compress -std=c11 -MD -MT CMakeFiles/cmTC_466fc.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_466fc.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_466fc.dir/CheckFunctionExists.c.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-DvMNld/CheckFunctionExists.c
        Linking C executable cmTC_466fc.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_466fc.dir/link.txt --verbose=1
        wasm-ld: error: unable to find library -lsnappy
        emcc: error: '/opt/homebrew/Cellar/emscripten/4.0.0/libexec/llvm/bin/wasm-ld -o cmTC_466fc.wasm CMakeFiles/cmTC_466fc.dir/CheckFunctionExists.c.o -lsnappy -L/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cache/sysroot/lib/wasm32-emscripten -lGL-getprocaddr -lal -lhtml5 -lstubs-debug -lnoexit -lc-debug -ldlmalloc-debug -lcompiler_rt -lc++-noexcept -lc++abi-debug-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr /var/folders/td/d2t00v0s3t53qvl_jtlkjb7r0000gn/T/tmpgr3p5ehylibemscripten_js_symbols.so --strip-debug --export=malloc --export=free --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_get_current --export=emscripten_stack_init --export=_emscripten_stack_alloc --export=__wasm_call_ctors --export=_emscripten_stack_restore --export=strerror --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_lib_deps --export-if-defined=__stop_em_lib_deps --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=main --export-if-defined=__main_argc_argv --export-if-defined=fflush --export-table -z stack-size=65536 --max-memory=2147483648 --initial-memory=16777216 --no-entry --stack-first --table-base=1' failed (returned 1)
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc  -DCHECK_FUNCTION_EXISTS=snappy_compress   -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_466fc.dir/objects1.rsp -o cmTC_466fc.js @CMakeFiles/cmTC_466fc.dir/linkLibs.rsp
        make[1]: *** [cmTC_466fc.js] Error 1
        make: *** [cmTC_466fc/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:78 (try_compile)"
      - "CMakeLists.txt:69 (check_library_exists)"
    checks:
      - "Looking for zstd_compress in zstd"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-tFiuE2"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-tFiuE2"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_ZSTD"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-tFiuE2'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_0cc1f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_0cc1f.dir/build.make CMakeFiles/cmTC_0cc1f.dir/build
        Building C object CMakeFiles/cmTC_0cc1f.dir/CheckFunctionExists.c.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc   -DCHECK_FUNCTION_EXISTS=zstd_compress -std=c11 -MD -MT CMakeFiles/cmTC_0cc1f.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_0cc1f.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_0cc1f.dir/CheckFunctionExists.c.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-tFiuE2/CheckFunctionExists.c
        Linking C executable cmTC_0cc1f.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0cc1f.dir/link.txt --verbose=1
        wasm-ld: error: unable to find library -lzstd
        emcc: error: '/opt/homebrew/Cellar/emscripten/4.0.0/libexec/llvm/bin/wasm-ld -o cmTC_0cc1f.wasm CMakeFiles/cmTC_0cc1f.dir/CheckFunctionExists.c.o -lzstd -L/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cache/sysroot/lib/wasm32-emscripten -lGL-getprocaddr -lal -lhtml5 -lstubs-debug -lnoexit -lc-debug -ldlmalloc-debug -lcompiler_rt -lc++-noexcept -lc++abi-debug-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr /var/folders/td/d2t00v0s3t53qvl_jtlkjb7r0000gn/T/tmp0evne3djlibemscripten_js_symbols.so --strip-debug --export=malloc --export=free --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_get_current --export=emscripten_stack_init --export=_emscripten_stack_alloc --export=__wasm_call_ctors --export=_emscripten_stack_restore --export=strerror --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_lib_deps --export-if-defined=__stop_em_lib_deps --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=main --export-if-defined=__main_argc_argv --export-if-defined=fflush --export-table -z stack-size=65536 --max-memory=2147483648 --initial-memory=16777216 --no-entry --stack-first --table-base=1' failed (returned 1)
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc  -DCHECK_FUNCTION_EXISTS=zstd_compress   -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_0cc1f.dir/objects1.rsp -o cmTC_0cc1f.js @CMakeFiles/cmTC_0cc1f.dir/linkLibs.rsp
        make[1]: *** [cmTC_0cc1f.js] Error 1
        make: *** [cmTC_0cc1f/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:78 (try_compile)"
      - "CMakeLists.txt:70 (check_library_exists)"
    checks:
      - "Looking for malloc in tcmalloc"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-NNfzj1"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-NNfzj1"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_TCMALLOC"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-NNfzj1'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_05e1b/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_05e1b.dir/build.make CMakeFiles/cmTC_05e1b.dir/build
        Building C object CMakeFiles/cmTC_05e1b.dir/CheckFunctionExists.c.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc   -DCHECK_FUNCTION_EXISTS=malloc -std=c11 -MD -MT CMakeFiles/cmTC_05e1b.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_05e1b.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_05e1b.dir/CheckFunctionExists.c.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-NNfzj1/CheckFunctionExists.c
        /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-NNfzj1/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'malloc' [-Wincompatible-library-redeclaration]
            7 |   CHECK_FUNCTION_EXISTS(void);
              |   ^
        <command line>:2:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            2 | #define CHECK_FUNCTION_EXISTS malloc
              |                               ^
        /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-NNfzj1/CheckFunctionExists.c:7:3: note: 'malloc' is a builtin with type 'void *(unsigned long)'
        <command line>:2:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            2 | #define CHECK_FUNCTION_EXISTS malloc
              |                               ^
        1 warning generated.
        Linking C executable cmTC_05e1b.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_05e1b.dir/link.txt --verbose=1
        wasm-ld: error: unable to find library -ltcmalloc
        emcc: error: '/opt/homebrew/Cellar/emscripten/4.0.0/libexec/llvm/bin/wasm-ld -o cmTC_05e1b.wasm CMakeFiles/cmTC_05e1b.dir/CheckFunctionExists.c.o -ltcmalloc -L/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cache/sysroot/lib/wasm32-emscripten -lGL-getprocaddr -lal -lhtml5 -lstubs-debug -lnoexit -lc-debug -ldlmalloc-debug -lcompiler_rt -lc++-noexcept -lc++abi-debug-noexcept -lsockets -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr /var/folders/td/d2t00v0s3t53qvl_jtlkjb7r0000gn/T/tmp7yj0682clibemscripten_js_symbols.so --strip-debug --export=malloc --export=free --export=emscripten_stack_get_end --export=emscripten_stack_get_free --export=emscripten_stack_get_base --export=emscripten_stack_get_current --export=emscripten_stack_init --export=_emscripten_stack_alloc --export=__wasm_call_ctors --export=_emscripten_stack_restore --export=strerror --export-if-defined=__start_em_asm --export-if-defined=__stop_em_asm --export-if-defined=__start_em_lib_deps --export-if-defined=__stop_em_lib_deps --export-if-defined=__start_em_js --export-if-defined=__stop_em_js --export-if-defined=main --export-if-defined=__main_argc_argv --export-if-defined=fflush --export-table -z stack-size=65536 --max-memory=2147483648 --initial-memory=16777216 --no-entry --stack-first --table-base=1' failed (returned 1)
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc  -DCHECK_FUNCTION_EXISTS=malloc   -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_05e1b.dir/objects1.rsp -o cmTC_05e1b.js @CMakeFiles/cmTC_05e1b.dir/linkLibs.rsp
        make[1]: *** [cmTC_05e1b.js] Error 1
        make: *** [cmTC_05e1b/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckSymbolExists.cmake:163 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCXXSymbolExists.cmake:74 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:78 (check_cxx_symbol_exists)"
    checks:
      - "Looking for fdatasync"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-RFRF79"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-RFRF79"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_CXX_FLAGS: " -pthread"
      CMAKE_CXX_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_FDATASYNC"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-RFRF79'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_20ec8/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_20ec8.dir/build.make CMakeFiles/cmTC_20ec8.dir/build
        Building CXX object CMakeFiles/cmTC_20ec8.dir/CheckSymbolExists.cxx.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++   -pthread  -std=c++11 -MD -MT CMakeFiles/cmTC_20ec8.dir/CheckSymbolExists.cxx.o -MF CMakeFiles/cmTC_20ec8.dir/CheckSymbolExists.cxx.o.d -o CMakeFiles/cmTC_20ec8.dir/CheckSymbolExists.cxx.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-RFRF79/CheckSymbolExists.cxx
        Linking CXX executable cmTC_20ec8.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_20ec8.dir/link.txt --verbose=1
        em++: warning: -pthread + ALLOW_MEMORY_GROWTH may run non-wasm code slowly, see https://github.com/WebAssembly/design/issues/1271 [-Wpthreads-mem-growth]
        cache:INFO: generating system asset: symbol_lists/71fca905e636b3a638f7b5bd03bef6c7c8c43f24.json... (this will be cached in "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cache/symbol_lists/71fca905e636b3a638f7b5bd03bef6c7c8c43f24.json" for subsequent builds)
        cache:INFO:  - ok
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++  -pthread    -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_20ec8.dir/objects1.rsp -o cmTC_20ec8.js
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckSymbolExists.cmake:163 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCXXSymbolExists.cmake:74 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:79 (check_cxx_symbol_exists)"
    checks:
      - "Looking for F_FULLFSYNC"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-UxqmOW"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-UxqmOW"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_CXX_FLAGS: " -pthread"
      CMAKE_CXX_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_FULLFSYNC"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-UxqmOW'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2960a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2960a.dir/build.make CMakeFiles/cmTC_2960a.dir/build
        Building CXX object CMakeFiles/cmTC_2960a.dir/CheckSymbolExists.cxx.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++   -pthread  -std=c++11 -MD -MT CMakeFiles/cmTC_2960a.dir/CheckSymbolExists.cxx.o -MF CMakeFiles/cmTC_2960a.dir/CheckSymbolExists.cxx.o.d -o CMakeFiles/cmTC_2960a.dir/CheckSymbolExists.cxx.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-UxqmOW/CheckSymbolExists.cxx
        /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-UxqmOW/CheckSymbolExists.cxx:8:19: error: use of undeclared identifier 'F_FULLFSYNC'
            8 |   return ((int*)(&F_FULLFSYNC))[argc];
              |                   ^
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_2960a.dir/CheckSymbolExists.cxx.o] Error 1
        make: *** [cmTC_2960a/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckSymbolExists.cmake:163 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCXXSymbolExists.cmake:74 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:80 (check_cxx_symbol_exists)"
    checks:
      - "Looking for O_CLOEXEC"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-z7E1To"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-z7E1To"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_CXX_FLAGS: " -pthread"
      CMAKE_CXX_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_O_CLOEXEC"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-z7E1To'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_7f56f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_7f56f.dir/build.make CMakeFiles/cmTC_7f56f.dir/build
        Building CXX object CMakeFiles/cmTC_7f56f.dir/CheckSymbolExists.cxx.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++   -pthread  -std=c++11 -MD -MT CMakeFiles/cmTC_7f56f.dir/CheckSymbolExists.cxx.o -MF CMakeFiles/cmTC_7f56f.dir/CheckSymbolExists.cxx.o.d -o CMakeFiles/cmTC_7f56f.dir/CheckSymbolExists.cxx.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-z7E1To/CheckSymbolExists.cxx
        Linking CXX executable cmTC_7f56f.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7f56f.dir/link.txt --verbose=1
        em++: warning: -pthread + ALLOW_MEMORY_GROWTH may run non-wasm code slowly, see https://github.com/WebAssembly/design/issues/1271 [-Wpthreads-mem-growth]
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++  -pthread    -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_7f56f.dir/objects1.rsp -o cmTC_7f56f.js
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:108 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCXXCompilerFlag.cmake:55 (cmake_check_compiler_flag)"
      - "CMakeLists.txt:109 (check_cxx_compiler_flag)"
    checks:
      - "Performing Test HAVE_CLANG_THREAD_SAFETY"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-xYOOo6"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-xYOOo6"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_CXX_FLAGS: " -pthread -fno-exceptions -fno-rtti"
      CMAKE_CXX_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_CLANG_THREAD_SAFETY"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-xYOOo6'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_3e8e4/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_3e8e4.dir/build.make CMakeFiles/cmTC_3e8e4.dir/build
        Building CXX object CMakeFiles/cmTC_3e8e4.dir/src.cxx.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++ -DHAVE_CLANG_THREAD_SAFETY  -pthread -fno-exceptions -fno-rtti  -std=c++11   -Wthread-safety -MD -MT CMakeFiles/cmTC_3e8e4.dir/src.cxx.o -MF CMakeFiles/cmTC_3e8e4.dir/src.cxx.o.d -o CMakeFiles/cmTC_3e8e4.dir/src.cxx.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-xYOOo6/src.cxx
        Linking CXX executable cmTC_3e8e4.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3e8e4.dir/link.txt --verbose=1
        em++: warning: -pthread + ALLOW_MEMORY_GROWTH may run non-wasm code slowly, see https://github.com/WebAssembly/design/issues/1271 [-Wpthreads-mem-growth]
        cache:INFO: generating system asset: symbol_lists/8be9650920488bc459ad326dde82cac9a8b4cf87.json... (this will be cached in "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cache/symbol_lists/8be9650920488bc459ad326dde82cac9a8b4cf87.json" for subsequent builds)
        cache:INFO:  - ok
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++  -pthread -fno-exceptions -fno-rtti    -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_3e8e4.dir/objects1.rsp -o cmTC_3e8e4.js
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:108 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCXXCompilerFlag.cmake:55 (cmake_check_compiler_flag)"
      - "CMakeLists.txt:112 (check_cxx_compiler_flag)"
    checks:
      - "Performing Test LEVELDB_HAVE_NO_MISSING_FIELD_INITIALIZERS"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-KiCGEK"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-KiCGEK"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_CXX_FLAGS: " -pthread -fno-exceptions -fno-rtti"
      CMAKE_CXX_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "LEVELDB_HAVE_NO_MISSING_FIELD_INITIALIZERS"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-KiCGEK'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_dea1a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_dea1a.dir/build.make CMakeFiles/cmTC_dea1a.dir/build
        Building CXX object CMakeFiles/cmTC_dea1a.dir/src.cxx.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++ -DLEVELDB_HAVE_NO_MISSING_FIELD_INITIALIZERS  -pthread -fno-exceptions -fno-rtti  -std=c++11   -Wno-missing-field-initializers -MD -MT CMakeFiles/cmTC_dea1a.dir/src.cxx.o -MF CMakeFiles/cmTC_dea1a.dir/src.cxx.o.d -o CMakeFiles/cmTC_dea1a.dir/src.cxx.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-KiCGEK/src.cxx
        Linking CXX executable cmTC_dea1a.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dea1a.dir/link.txt --verbose=1
        em++: warning: -pthread + ALLOW_MEMORY_GROWTH may run non-wasm code slowly, see https://github.com/WebAssembly/design/issues/1271 [-Wpthreads-mem-growth]
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++  -pthread -fno-exceptions -fno-rtti    -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_dea1a.dir/objects1.rsp -o cmTC_dea1a.js
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:108 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCXXSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "CMakeLists.txt:118 (check_cxx_source_compiles)"
    checks:
      - "Performing Test HAVE_CXX17_HAS_INCLUDE"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-dki2QG"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-dki2QG"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_CXX_FLAGS: " -pthread -fno-exceptions -fno-rtti"
      CMAKE_CXX_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "HAVE_CXX17_HAS_INCLUDE"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-dki2QG'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_14401/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_14401.dir/build.make CMakeFiles/cmTC_14401.dir/build
        Building CXX object CMakeFiles/cmTC_14401.dir/src.cxx.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++ -DHAVE_CXX17_HAS_INCLUDE  -pthread -fno-exceptions -fno-rtti  -std=c++11 -MD -MT CMakeFiles/cmTC_14401.dir/src.cxx.o -MF CMakeFiles/cmTC_14401.dir/src.cxx.o.d -o CMakeFiles/cmTC_14401.dir/src.cxx.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-dki2QG/src.cxx
        Linking CXX executable cmTC_14401.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_14401.dir/link.txt --verbose=1
        em++: warning: -pthread + ALLOW_MEMORY_GROWTH may run non-wasm code slowly, see https://github.com/WebAssembly/design/issues/1271 [-Wpthreads-mem-growth]
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/em++  -pthread -fno-exceptions -fno-rtti    -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_14401.dir/objects1.rsp -o cmTC_14401.js
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:108 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/FindThreads.cmake:97 (CHECK_C_SOURCE_COMPILES)"
      - "/opt/homebrew/share/cmake/Modules/FindThreads.cmake:163 (_threads_check_libc)"
      - "CMakeLists.txt:311 (find_package)"
    checks:
      - "Performing Test CMAKE_HAVE_LIBC_PTHREAD"
    directories:
      source: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-zRJ8vO"
      binary: "/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-zRJ8vO"
    cmakeVariables:
      CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: "/opt/homebrew/bin/clang-scan-deps"
      CMAKE_C_FLAGS: " -Wstrict-prototypes"
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: "  -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1"
      CMAKE_MODULE_PATH: "/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules;/opt/homebrew/Cellar/emscripten/4.0.0/libexec/cmake/Modules"
    buildResult:
      variable: "CMAKE_HAVE_LIBC_PTHREAD"
      cached: true
      stdout: |
        Change Dir: '/Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-zRJ8vO'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_59859/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_59859.dir/build.make CMakeFiles/cmTC_59859.dir/build
        Building C object CMakeFiles/cmTC_59859.dir/src.c.o
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc -DCMAKE_HAVE_LIBC_PTHREAD  -Wstrict-prototypes  -std=c11 -MD -MT CMakeFiles/cmTC_59859.dir/src.c.o -MF CMakeFiles/cmTC_59859.dir/src.c.o.d -o CMakeFiles/cmTC_59859.dir/src.c.o -c /Users/user/Desktop/dev/leveldb.wasm/build_wasm/CMakeFiles/CMakeScratch/TryCompile-zRJ8vO/src.c
        Linking C executable cmTC_59859.js
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_59859.dir/link.txt --verbose=1
        /opt/homebrew/Cellar/emscripten/4.0.0/libexec/emcc  -Wstrict-prototypes    -s WASM=1 -s SINGLE_FILE=0 -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap'] -s EXPORTED_FUNCTIONS=['_main','_malloc','_free'] -s INITIAL_MEMORY=16MB -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1  @CMakeFiles/cmTC_59859.dir/objects1.rsp -o cmTC_59859.js
        
      exitCode: 0
...
